'use strict';

var _SERVICE_STANDARD_PAY, _SERVICE_CVV_ONLY_PAY, _SERVICE_PREFILLED_CA, _REQUEST_ENDPOINTS;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var SERVICE_STANDARD_PAYMENT = 1;
var SERVICE_CVV_ONLY_PAYMENT = 2;
var SERVICE_PREFILLED_CARD_DATA_PAYMENT = 3;

var PAYMENT_TYPE_CARD = 'card';
var PAYMENT_TYPE_SMS = 'sms';
var PAYMENT_TYPE_TRANSFER = 'transfer';

var LIVE_MODE = 'live';
var SANDBOX_MODE = 'sandbox';

var REQUEST_ENDPOINTS = (_REQUEST_ENDPOINTS = {}, _defineProperty(_REQUEST_ENDPOINTS, SERVICE_STANDARD_PAYMENT, (_SERVICE_STANDARD_PAY = {}, _defineProperty(_SERVICE_STANDARD_PAY, LIVE_MODE, 'https://secure.mobilpay.ro'), _defineProperty(_SERVICE_STANDARD_PAY, SANDBOX_MODE, 'http://sandboxsecure.mobilpay.ro'), _SERVICE_STANDARD_PAY)), _defineProperty(_REQUEST_ENDPOINTS, SERVICE_CVV_ONLY_PAYMENT, (_SERVICE_CVV_ONLY_PAY = {}, _defineProperty(_SERVICE_CVV_ONLY_PAY, LIVE_MODE, 'https://secure.mobilpay.ro/card3'), _defineProperty(_SERVICE_CVV_ONLY_PAY, SANDBOX_MODE, 'http://sandboxsecure.mobilpay.ro/card3'), _SERVICE_CVV_ONLY_PAY)), _defineProperty(_REQUEST_ENDPOINTS, SERVICE_PREFILLED_CARD_DATA_PAYMENT, (_SERVICE_PREFILLED_CA = {}, _defineProperty(_SERVICE_PREFILLED_CA, LIVE_MODE, 'https://secure.mobilpay.ro/card4'), _defineProperty(_SERVICE_PREFILLED_CA, SANDBOX_MODE, 'http://sandboxsecure.mobilpay.ro/card4'), _SERVICE_PREFILLED_CA)), _defineProperty(_REQUEST_ENDPOINTS, 'login', _defineProperty({}, SANDBOX_MODE, 'http://sandboxsecure.mobilpay.ro/api/payment2/')), _defineProperty(_REQUEST_ENDPOINTS, 'credit', _defineProperty({}, SANDBOX_MODE, 'http://sandboxsecure.mobilpay.ro/api/payment2/')), _REQUEST_ENDPOINTS);

var ADDRESS_TYPE_COMPANY = 'company';
var ADDRESS_TYPE_PERSON = 'person';

var NOTIFY_ACTION_NEW = 'new';
var NOTIFY_ACTION_PAID_PENDING = 'paid_pending';
var NOTIFY_ACTION_CONFIRMED_PENDING = 'confirmed_pending';
var NOTIFY_ACTION_PAID = 'paid';
var NOTIFY_ACTION_CONFIRMED = 'confirmed';
var NOTIFY_ACTION_CREDIT = 'credit';
var NOTIFY_ACTION_CANCELED = 'canceled';

var VALID_NOTIFY_ACTIONS = [NOTIFY_ACTION_NEW, NOTIFY_ACTION_PAID_PENDING, NOTIFY_ACTION_CONFIRMED_PENDING, NOTIFY_ACTION_PAID, NOTIFY_ACTION_CONFIRMED, NOTIFY_ACTION_CREDIT, NOTIFY_ACTION_CANCELED];

var CRC_ERROR_TYPE_TEMPORARY = 1;
var CRC_ERROR_TYPE_PERMANENT = 2;

// instant payment notification (IPN) error codes
var IPN_ERROR_APPROVED = 0; // approved
var IPN_ERROR_CARD_HAS_RISK = 16; // card has a risk (i.e. stolen card)
var IPN_ERROR_INCORRECT_CARD_NR = 17; // card number is incorrect
var IPN_ERROR_CARD_CLOSED = 18; // closed card
var IPN_ERROR_CARD_EXPIRED = 19; // card is expired
var IPN_ERROR_INSUFFICIENT_FUNDS = 20; // insufficient funds
var IPN_ERROR_INCORRECT_CVV2 = 21; // cVV2 code incorrect
var IPN_ERROR_ISSUER_UNAVAILABLE = 22; // issuer is unavailable
var IPN_ERROR_INCORRECT_AMOUNT = 32; // amount is incorrect
var IPN_ERROR_INCORRECT_CURRENCY = 33; // currency is incorrect
var IPN_ERROR_TRANSACTION_NOT_PERMITED = 34; // transaction not permitted to cardholder
var IPN_ERROR_TRANSACTION_DECLINED = 35; // transaction declined
var IPN_ERROR_TRANSACTION_REJECTED = 36; // transaction rejected by antifraud filters
var IPN_ERROR_TRANSACTION_DECLINED2 = 37; // transaction declined (breaking the law)
var IPN_ERROR_TRANSACTION_DECLINED3 = 38; // transaction declined
var IPN_ERROR_INVALID_REQUEST = 48; // invalid request
var IPN_ERROR_DUPLICATE_PREAUTH = 49; // duplicate PREAUTH
var IPN_ERROR_DUPLICATE_AUTH = 50; // duplicate PREAUTH
var IPN_ERROR_CAN_ONLY_CANCEL_PREAUTH = 51; // you can only CANCEL a preauth order
var IPN_ERROR_CAN_ONLY_CONFIRM_PREAUTH = 52; // you can only CONFIRM a preauth order
var IPN_ERROR_CAN_ONLY_CREDIT_CONFIRMED = 53; // you can only CREDIT a confirmed order
var IPN_ERROR_CREDIT_AMOUNT_TO_HIGHT = 54; // credit amount is higher than auth amount
var IPN_ERROR_CAPTURE_AMOUNT_TO_HIGHT = 55; // capture amount is higher than preauth amount
var IPN_ERROR_DUPLICATE_REQUEST = 56; // duplicate request
var IPN_ERROR_GENERIC = 99; // generic error

module.exports = {
  SERVICE_STANDARD_PAYMENT: SERVICE_STANDARD_PAYMENT,
  SERVICE_CVV_ONLY_PAYMENT: SERVICE_CVV_ONLY_PAYMENT,
  SERVICE_PREFILLED_CARD_DATA_PAYMENT: SERVICE_PREFILLED_CARD_DATA_PAYMENT,
  PAYMENT_TYPE_CARD: PAYMENT_TYPE_CARD,
  PAYMENT_TYPE_SMS: PAYMENT_TYPE_SMS,
  LIVE_MODE: LIVE_MODE,
  SANDBOX_MODE: SANDBOX_MODE,
  REQUEST_ENDPOINTS: REQUEST_ENDPOINTS,
  ADDRESS_TYPE_COMPANY: ADDRESS_TYPE_COMPANY,
  ADDRESS_TYPE_PERSON: ADDRESS_TYPE_PERSON,
  VALID_NOTIFY_ACTIONS: VALID_NOTIFY_ACTIONS,
  CRC_ERROR_TYPE_TEMPORARY: CRC_ERROR_TYPE_TEMPORARY,
  CRC_ERROR_TYPE_PERMANENT: CRC_ERROR_TYPE_PERMANENT,
  IPN_ERROR_APPROVED: IPN_ERROR_APPROVED,
  IPN_ERROR_CARD_HAS_RISK: IPN_ERROR_CARD_HAS_RISK,
  IPN_ERROR_INCORRECT_CARD_NR: IPN_ERROR_INCORRECT_CARD_NR,
  IPN_ERROR_CARD_CLOSED: IPN_ERROR_CARD_CLOSED,
  IPN_ERROR_CARD_EXPIRED: IPN_ERROR_CARD_EXPIRED,
  IPN_ERROR_INSUFFICIENT_FUNDS: IPN_ERROR_INSUFFICIENT_FUNDS,
  IPN_ERROR_INCORRECT_CVV2: IPN_ERROR_INCORRECT_CVV2,
  IPN_ERROR_ISSUER_UNAVAILABLE: IPN_ERROR_ISSUER_UNAVAILABLE,
  IPN_ERROR_INCORRECT_AMOUNT: IPN_ERROR_INCORRECT_AMOUNT,
  IPN_ERROR_INCORRECT_CURRENCY: IPN_ERROR_INCORRECT_CURRENCY,
  IPN_ERROR_TRANSACTION_NOT_PERMITED: IPN_ERROR_TRANSACTION_NOT_PERMITED,
  IPN_ERROR_TRANSACTION_DECLINED: IPN_ERROR_TRANSACTION_DECLINED,
  IPN_ERROR_TRANSACTION_REJECTED: IPN_ERROR_TRANSACTION_REJECTED,
  IPN_ERROR_TRANSACTION_DECLINED2: IPN_ERROR_TRANSACTION_DECLINED2,
  IPN_ERROR_TRANSACTION_DECLINED3: IPN_ERROR_TRANSACTION_DECLINED3,
  IPN_ERROR_INVALID_REQUEST: IPN_ERROR_INVALID_REQUEST,
  IPN_ERROR_DUPLICATE_PREAUTH: IPN_ERROR_DUPLICATE_PREAUTH,
  IPN_ERROR_DUPLICATE_AUTH: IPN_ERROR_DUPLICATE_AUTH,
  IPN_ERROR_CAN_ONLY_CANCEL_PREAUTH: IPN_ERROR_CAN_ONLY_CANCEL_PREAUTH,
  IPN_ERROR_CAN_ONLY_CONFIRM_PREAUTH: IPN_ERROR_CAN_ONLY_CONFIRM_PREAUTH,
  IPN_ERROR_CAN_ONLY_CREDIT_CONFIRMED: IPN_ERROR_CAN_ONLY_CREDIT_CONFIRMED,
  IPN_ERROR_CREDIT_AMOUNT_TO_HIGHT: IPN_ERROR_CREDIT_AMOUNT_TO_HIGHT,
  IPN_ERROR_CAPTURE_AMOUNT_TO_HIGHT: IPN_ERROR_CAPTURE_AMOUNT_TO_HIGHT,
  IPN_ERROR_DUPLICATE_REQUEST: IPN_ERROR_DUPLICATE_REQUEST,
  IPN_ERROR_GENERIC: IPN_ERROR_GENERIC
};